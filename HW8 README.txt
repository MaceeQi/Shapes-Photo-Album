The IShape interface includes methods that all shapes should implement including setting an x, y point, setting color by r,g,b color intensity values, setting the size by two variables (horizontal and vertical size), getting its attributes (name, point, color), and making a deep copy of itself. Right now there are only Rectangle and Oval shapes but the interface methods allow for any 2D shape to be supported. Each shape has a color (Color class) which includes red, green, blue intensity values between 0.0 and 1.0. This separate Color class allows for creations of different Color objects with various levels of r,g,b intensity values. Each shape has a point (Point2D class) which includes x, y values. Our shapes which implement IShape have non-negative values for x, y coordinates and sizes. The purpose of the separate Color and Point2D classes are for delegation. 

The Snapshot class has a unique ID, timestamp, description, and list of IShapes. The unique ID and timestamp are determined based on the current date and time of creation. A description is a String associated to the Snapshot. A deep copy of the given list of IShapes is created so that any future changes to the list of shapes or the shapes within that list are not reflected in the snapshot. This is to emulate a true "snapshot" in time. 

The IPhotoAlbum interface includes methods that all photo album models should implement. It should be able to create a shape, add a shape to the model, remove a shape by shape name, and make changes to shapes in the model by shape name (change color, move it around, and resize). It can do a total reset of the model, it can take a "selfie" (snapshot) of itself, and it can also get all snapshots, current shapes, and total model state before reset.

The ShapesPhotoAlbumModel is the model which implements the IPhotoAlbum interface. It has an association with IShape and the Snapshot class. The max dimensions of the model was chosen to be 1000.0 x 1000.0, so shapes with a point past these dimensions will not be added to the model. It has a Linked Hash Map of IShapes, with name of the shape as key and the actual shape object as value. Duplicate shape names are not allowed and the sequence of shape creation should be kept so a linked hash map was chosen. For similar reasons, the model has a Linked Hash Map of all Snapshots taken before reset. Snapshot ID as key, actual Snapshot object as the value. The model can create shapes by a factory method. Creating a shape does not automatically add it to the model so there is a separate method for it. Duplicate shape names will not be added to the model. The model can remove shapes and make changes to shapes in the model (change color, size, and point) by shape name. If the shape name doesn't exist in the model, nothing is changed. The reset method makes a total reset of the model, clearing all current shapes in the model and any snapshots taken. There is a method that allows for retrieving a list of snapshots taken and another method that allows for retrieving a list of the current shapes and their location/state in the model. Finally, the model has a method that allows for the user to get the model state, which describes the shapes that are part of the photo album and their details, it lists out the IDs of all snapshots taken before reset, and then prints out each snapshot and its information.
